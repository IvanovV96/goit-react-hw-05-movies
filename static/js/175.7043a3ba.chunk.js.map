{"version":3,"file":"static/js/175.7043a3ba.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/Movies/Movies.jsx","services/parseDataFromLS.js","components/TrendingFilms/TrendingFilms.styled.js","services/axios.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { List, ListItem } from 'components/TrendingFilms/TrendingFilms.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'services/axios';\nimport img from 'placeholder-img.png';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <ListItem key={id}>\n          <NavLink to={`${id}`} state={{ from: location }}>\n            <img\n              src={poster_path ? `${IMG_URL}${poster_path}` : img}\n              alt={title}\n              width=\"300\"\n              onError={e => (e.target.src = img)}\n            />\n            <p>{title}</p>\n          </NavLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 5px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  :hover {\n    background-color: white;\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByName } from 'services/axios';\nimport { Input, SearchButton } from './SearchForm.styled';\n\nconst SearchForm = ({ getFilms }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const onChange = e => {\n    setSearchParams(e.target.value !== '' ? { query: e.target.value } : {});\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const inputValue = form.elements.search.value;\n    if (!inputValue.trim()) {\n      alert('try again');\n      localStorage.setItem('films', []);\n      return;\n    }\n    const data = await fetchMoviesByName(query);\n    setSearchParams({ query });\n    localStorage.setItem('films', JSON.stringify(data.data.results));\n    getFilms(data.data.results);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <Input type=\"text\" value={query} name=\"search\" onChange={onChange} />\n      </label>\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  getFilms: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport MoviesList from 'components/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Box from 'components/Box/Box';\nimport { parseDataFromLS } from 'services/parseDataFromLS';\n\nconst Movies = () => {\n  const [films, setFilms] = useState(() => parseDataFromLS('films'));\n\n  return (\n    <Box textAlign=\"center\" p=\"20px\">\n      <SearchForm getFilms={setFilms} />\n      {films.length > 0 ? (\n        <MoviesList films={films} />\n      ) : (\n        <Box mt=\"20px\">\n          <p>There is no films yet..</p>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n","export const parseDataFromLS = (key, initialValue = []) => {\n  try {\n    return JSON.parse(localStorage.getItem(key)) ?? initialValue;\n  } catch (error) {\n    return initialValue;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 30px;\n`;\n\nexport const ListItem = styled.li`\n  text-align: center;\n  font-size: 20px;\n\n  a {\n    color: black;\n    text-decoration: none;\n    :visited {\n      color: inherit;\n    }\n    :hover {\n      color: teal;\n    }\n  }\n`;\n","import axios from 'axios';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb85da72485cd2efa68a1ef9ab108fb4';\n\nexport const fetchTrendingData = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const data = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCreditsById = async id => {\n  const data = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviewsById = async id => {\n  const data = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async (query = '') => {\n  const data = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["films","location","useLocation","map","id","title","poster_path","to","state","from","src","IMG_URL","img","alt","width","onError","e","target","Input","styled","SearchButton","getFilms","useSearchParams","searchParams","setSearchParams","query","get","onSubmit","preventDefault","form","currentTarget","elements","search","value","trim","alert","localStorage","setItem","fetchMoviesByName","data","JSON","stringify","results","type","name","onChange","useState","key","initialValue","parse","getItem","error","parseDataFromLS","setFilms","Box","textAlign","p","length","mt","List","ListItem","axios","API_KEY","fetchTrendingData","fetchMovieById","fetchCreditsById","fetchReviewsById"],"sourceRoot":""}