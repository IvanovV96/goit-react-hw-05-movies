{"version":3,"file":"static/js/745.b673be86.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/Movies/Movies.jsx","components/TrendingFilms/TrendingFilms.styled.js","services/axios.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { List, ListItem } from 'components/TrendingFilms/TrendingFilms.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'services/axios';\nimport img from 'placeholder-img.png';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <ListItem key={id}>\n          <NavLink to={`${id}`} state={{ from: location }}>\n            <img\n              src={poster_path ? `${IMG_URL}${poster_path}` : img}\n              alt={title}\n              width=\"300\"\n              onError={e => (e.target.src = img)}\n            />\n            <p>{title}</p>\n          </NavLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 5px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  :hover {\n    background-color: white;\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input, SearchButton } from './SearchForm.styled';\n\nconst SearchForm = ({ getQuery }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    setQuery(searchParams.get('query') ?? '');\n  }, [searchParams]);\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      alert('try again');\n      return;\n    }\n    getQuery(query);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <Input type=\"text\" value={query} name=\"search\" onChange={onChange} />\n      </label>\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  getQuery: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Box from 'components/Box/Box';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByName } from 'services/axios';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    setQuery(query);\n  }, [searchParams]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (!query) return;\n      const data = await fetchMoviesByName(query);\n      setFilms(data.data.results);\n      setSearchParams({ query });\n    };\n    fetch();\n  }, [query, setSearchParams]);\n  return (\n    <Box textAlign=\"center\" p=\"20px\">\n      <SearchForm getQuery={setQuery} />\n      {films.length > 0 ? (\n        <MoviesList films={films} />\n      ) : (\n        <Box mt=\"20px\">\n          <p>There is no films yet..</p>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 30px;\n`;\n\nexport const ListItem = styled.li`\n  text-align: center;\n  font-size: 20px;\n\n  a {\n    color: black;\n    text-decoration: none;\n    :visited {\n      color: inherit;\n    }\n    :hover {\n      color: teal;\n    }\n  }\n`;\n","import axios from 'axios';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb85da72485cd2efa68a1ef9ab108fb4';\n\nexport const fetchTrendingData = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const data = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCreditsById = async id => {\n  const data = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviewsById = async id => {\n  const data = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async (query = '') => {\n  const data = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["films","location","useLocation","map","id","title","poster_path","to","state","from","src","IMG_URL","img","alt","width","onError","e","target","Input","styled","SearchButton","getQuery","useState","query","setQuery","useSearchParams","searchParams","useEffect","get","onSubmit","preventDefault","trim","alert","type","value","name","onChange","setFilms","setSearchParams","fetch","fetchMoviesByName","data","results","Box","textAlign","p","length","mt","List","ListItem","axios","API_KEY","fetchTrendingData","fetchMovieById","fetchCreditsById","fetchReviewsById"],"sourceRoot":""}