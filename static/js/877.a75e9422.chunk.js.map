{"version":3,"file":"static/js/877.a75e9422.chunk.js","mappings":"iSA4CA,EArCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACKC,EAAAA,EAAAA,IAAiBP,GADtB,OACRQ,EADQ,OAEdJ,EAAQI,EAAKA,KAAKL,MAFJ,2CAAH,qDAIbG,GACD,GAAE,CAACN,KAGF,8BACGG,EAAKM,OAAS,GACb,SAAC,IAAD,UACGN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,GAAIC,EAAhC,EAAgCA,KAAhC,OACR,UAAC,IAAD,YACE,gBACEC,IAAG,UAAKC,EAAAA,IAAL,OAAeL,GAClBM,IAAI,GACJC,MAAM,MACNC,QAAS,SAAAC,GAAC,OAAKA,EAAEC,OAAON,IAAMO,CAApB,KAEZ,uBAAIR,KACJ,uCAAeF,OARFC,EADP,OAcZ,SAACU,EAAA,EAAD,CAAKC,UAAU,SAASC,GAAG,OAA3B,UACE,4EAKT,C,yGCxCYC,EAAOC,EAAAA,EAAAA,GAAH,6HAQJC,EAAWD,EAAAA,EAAAA,GAAH,sN,0NCTRX,EAAU,kCACvBa,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD5B,cACzBtB,EADyB,yBAExBA,GAFwB,2CAAH,qDAKjBwB,EAAc,mCAAG,WAAMnB,GAAN,uFACTgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,oBAAiCiB,IADxB,cACtBtB,EADsB,yBAErBA,GAFqB,2CAAH,sDAKdD,EAAgB,mCAAG,WAAMM,GAAN,uFACXgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,4BAAyCiB,IAD9B,cACxBtB,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhByB,EAAgB,mCAAG,WAAMpB,GAAN,uFACXgB,EAAAA,GAAAA,IAAA,gBAAmBhB,EAAnB,4BAAyCiB,IAD9B,cACxBtB,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhB0B,EAAiB,mCAAG,yGAAOC,EAAP,+BAAe,GAAf,SACZN,EAAAA,GAAAA,IAAA,+BACOC,EADP,kBACwBK,IAFZ,cACzB3B,EADyB,yBAIxBA,GAJwB,2CAAH,oD","sources":["components/Cast/Cast.jsx","components/TrendingFilms/TrendingFilms.styled.js","services/axios.js"],"sourcesContent":["import { List, ListItem } from 'components/TrendingFilms/TrendingFilms.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCreditsById, IMG_URL } from 'services/axios';\nimport img from 'placeholder-img.png';\nimport Box from 'components/Box/Box';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const getFilm = async () => {\n      const data = await fetchCreditsById(movieId);\n      setCast(data.data.cast);\n    };\n    getFilm();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <List>\n          {cast.map(({ profile_path, character, id, name }) => (\n            <ListItem key={id}>\n              <img\n                src={`${IMG_URL}${profile_path}`}\n                alt=\"\"\n                width=\"200\"\n                onError={e => (e.target.src = img)}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Box textAlign=\"center\" mt=\"30px\">\n          <p>There is no cast information for this film...</p>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 30px;\n`;\n\nexport const ListItem = styled.li`\n  text-align: center;\n  font-size: 20px;\n\n  a {\n    color: black;\n    text-decoration: none;\n    :visited {\n      color: inherit;\n    }\n    :hover {\n      color: teal;\n    }\n  }\n`;\n","import axios from 'axios';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb85da72485cd2efa68a1ef9ab108fb4';\n\nexport const fetchTrendingData = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const data = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCreditsById = async id => {\n  const data = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviewsById = async id => {\n  const data = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async (query = '') => {\n  const data = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getFilm","fetchCreditsById","data","length","map","profile_path","character","id","name","src","IMG_URL","alt","width","onError","e","target","img","Box","textAlign","mt","List","styled","ListItem","axios","API_KEY","fetchTrendingData","fetchMovieById","fetchReviewsById","fetchMoviesByName","query"],"sourceRoot":""}