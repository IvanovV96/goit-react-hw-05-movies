{"version":3,"file":"static/js/122.b79c93c8.chunk.js","mappings":"6QAoCA,EA/BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAiBJ,GADpB,OACVK,EADU,OAEhBN,EAAWM,EAAKA,KAAKC,SAFL,2CAAH,qDAIfH,GACD,GAAE,CAACH,KAEF,8BACGF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,OAQf,SAACG,EAAA,EAAD,CAAKC,UAAU,SAASC,GAAG,OAA3B,UACE,mEAKT,C,0NCjCYC,EAAU,kCACvBC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD5B,cACzBZ,EADyB,yBAExBA,GAFwB,2CAAH,qDAKjBc,EAAc,mCAAG,WAAMV,GAAN,uFACTO,EAAAA,GAAAA,IAAA,gBAAmBP,EAAnB,oBAAiCQ,IADxB,cACtBZ,EADsB,yBAErBA,GAFqB,2CAAH,sDAKde,EAAgB,mCAAG,WAAMX,GAAN,uFACXO,EAAAA,GAAAA,IAAA,gBAAmBP,EAAnB,4BAAyCQ,IAD9B,cACxBZ,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBD,EAAgB,mCAAG,WAAMK,GAAN,uFACXO,EAAAA,GAAAA,IAAA,gBAAmBP,EAAnB,4BAAyCQ,IAD9B,cACxBZ,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBgB,EAAiB,mCAAG,yGAAOC,EAAP,+BAAe,GAAf,SACZN,EAAAA,GAAAA,IAAA,+BACOC,EADP,kBACwBK,IAFZ,cACzBjB,EADyB,yBAIxBA,GAJwB,2CAAH,oD","sources":["components/Reviews/Reviews.jsx","services/axios.js"],"sourcesContent":["import Box from 'components/Box/Box';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/axios';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReview = async () => {\n      const data = await fetchReviewsById(movieId);\n      setReviews(data.data.results);\n    };\n    getReview();\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Box textAlign=\"center\" mt=\"30px\">\n          <p>There is no reviews for this film...</p>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bb85da72485cd2efa68a1ef9ab108fb4';\n\nexport const fetchTrendingData = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const data = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCreditsById = async id => {\n  const data = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviewsById = async id => {\n  const data = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async (query = '') => {\n  const data = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReview","fetchReviewsById","data","results","length","map","id","author","content","Box","textAlign","mt","IMG_URL","axios","API_KEY","fetchTrendingData","fetchMovieById","fetchCreditsById","fetchMoviesByName","query"],"sourceRoot":""}